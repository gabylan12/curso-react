{"ast":null,"code":"var _jsxFileName = \"/home/c910147/curso-react/clase6/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Counter from './Counter.js';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport todoApp from './reducer';\n/*class Increment extends React.Component {\n  function handleIncrement(e) {\n    console.log(\"handleIncrement\");\n    store.dispatch(addIncrement(this.props.value));\n  }\n\n  render() {\n    return (\n      <>\n        <button onClick={event => handleIncrement()}>Increment</button>\n      </>)\n  }\n}*/\n\nfunction handleIncrement(e) {\n  console.log(\"handleIncrement\");\n  store.dispatch(addIncrement(e.actionName, e.value));\n}\n\nconst Increment = props => React.createElement(\"button\", {\n  onClick: event => handleIncrement(props),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, props.actionName);\n\nconst addIncrement = (actionName, number) => {\n  return {\n    type: actionName,\n    payload: number\n  };\n};\n\nlet store = createStore(todoApp);\n\nfunction App() {\n  return React.createElement(React.Fragment, null, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Counter, {\n    counter: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Increment, {\n    actionName: \"INCREMENT\",\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Increment, {\n    actionName: \"DECREMENT\",\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/c910147/curso-react/clase6/src/App.js"],"names":["React","Counter","createStore","Provider","todoApp","handleIncrement","e","console","log","store","dispatch","addIncrement","actionName","value","Increment","props","event","number","type","payload","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAMA;;;;;;;;;;;;;;AAcA,SAASC,eAAT,CAAyBC,CAAzB,EAA4B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAeC,YAAY,CAACL,CAAC,CAACM,UAAH,EAAcN,CAAC,CAACO,KAAhB,CAA3B;AACD;;AAED,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAQ,EAAA,OAAO,EAAEC,KAAK,IAAIX,eAAe,CAACU,KAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAmDA,KAAK,CAACH,UAAzD,CAA7B;;AAGA,MAAMD,YAAY,GAAG,CAACC,UAAD,EAAYK,MAAZ,KAAuB;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEN,UADD;AAELO,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAKD,CAND;;AAUA,IAAIR,KAAK,GAAGP,WAAW,CAACE,OAAD,CAAvB;;AAGA,SAASgB,GAAT,GAAe;AACb,SACE,0CACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEX,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAC,WAAtB;AAAkC,IAAA,KAAK,EAAC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAC,WAAtB;AAAkC,IAAA,KAAK,EAAC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD;;AAED,eAAeW,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Counter from './Counter.js';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport todoApp from './reducer'\n\n\n\n\n\n/*class Increment extends React.Component {\n  function handleIncrement(e) {\n    console.log(\"handleIncrement\");\n    store.dispatch(addIncrement(this.props.value));\n  }\n\n  render() {\n    return (\n      <>\n        <button onClick={event => handleIncrement()}>Increment</button>\n      </>)\n  }\n}*/\n\nfunction handleIncrement(e) {\n  console.log(\"handleIncrement\");\n  store.dispatch(addIncrement(e.actionName,e.value));\n}\n\nconst Increment = (props) => <button onClick={event => handleIncrement(props)}>{props.actionName}</button>;\n\n\nconst addIncrement = (actionName,number) => {\n  return {\n    type: actionName,\n    payload: number\n  };\n\n}\n\n\n\nlet store = createStore(todoApp)\n\n\nfunction App() {\n  return (\n    <>\n      <Provider store={store}>\n        <Counter counter=\"0\"/>\n        <Increment actionName=\"INCREMENT\" value=\"1\"/>\n        <Increment actionName=\"DECREMENT\" value=\"1\"/>\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}