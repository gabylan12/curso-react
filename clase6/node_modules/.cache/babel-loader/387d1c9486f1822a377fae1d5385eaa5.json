{"ast":null,"code":"var _jsxFileName = \"/home/c910147/curso-react/clase6/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Counter from './Counter.js';\nimport Increment from './Increment.js';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport todoApp from './reducer';\n/*Number Input */\n\nconst setValue = number => {\n  return {\n    type: \"SET_VALUE\",\n    payload: number\n  };\n};\n\nfunction handleInput(e) {\n  console.log(e.target.value);\n  store.dispatch(setValue(e.target.value));\n}\n\nconst Number = props => React.createElement(\"input\", {\n  type: \"text\",\n  onChange: event => handleInput(event),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n});\n/*APP*/\n\n\nlet store = createStore(todoApp);\n\nfunction App() {\n  return React.createElement(React.Fragment, null, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Counter, {\n    counter: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Increment, {\n    actionName: \"INCREMENT\",\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Increment, {\n    actionName: \"DECREMENT\",\n    value: \"1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Increment, {\n    actionName: \"RESET\",\n    value: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Number, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/c910147/curso-react/clase6/src/App.js"],"names":["React","Counter","Increment","createStore","Provider","todoApp","setValue","number","type","payload","handleInput","e","console","log","target","value","store","dispatch","Number","props","event","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AASA;;AACA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAE,WADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAKD,CAND;;AAQA,SAASG,WAAT,CAAqBC,CAArB,EAAwB;AACtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAArB;AACAC,EAAAA,KAAK,CAACC,QAAN,CAAeX,QAAQ,CAACK,CAAC,CAACG,MAAF,CAASC,KAAV,CAAvB;AACD;;AAED,MAAMG,MAAM,GAAIC,KAAD,IAAW;AAAO,EAAA,IAAI,EAAC,MAAZ;AAAmB,EAAA,QAAQ,EAAEC,KAAK,IAAIV,WAAW,CAACU,KAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA1B;AAEA;;;AAEA,IAAIJ,KAAK,GAAGb,WAAW,CAACE,OAAD,CAAvB;;AAGA,SAASgB,GAAT,GAAe;AACb,SACE,0CACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAC,WAAtB;AAAkC,IAAA,KAAK,EAAC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAC,WAAtB;AAAkC,IAAA,KAAK,EAAC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAC,OAAtB;AAA8B,IAAA,KAAK,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAWD;;AAED,eAAeK,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Counter from './Counter.js';\nimport Increment from './Increment.js';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport todoApp from './reducer'\n\n\n\n\n\n\n\n\n/*Number Input */\nconst setValue = (number) => {\n  return {\n    type: \"SET_VALUE\",\n    payload: number\n  };\n\n}\n\nfunction handleInput(e) {\n  console.log(e.target.value);\n  store.dispatch(setValue(e.target.value));\n}\n\nconst Number = (props) => <input type=\"text\" onChange={event => handleInput(event)} />;\n\n/*APP*/\n\nlet store = createStore(todoApp)\n\n\nfunction App() {\n  return (\n    <>\n      <Provider store={store}>\n        <Counter counter=\"0\"/>\n        <Increment actionName=\"INCREMENT\" value=\"1\"/>\n        <Increment actionName=\"DECREMENT\" value=\"1\"/>\n        <Increment actionName=\"RESET\" value=\"0\"/>\n        <Number />\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}